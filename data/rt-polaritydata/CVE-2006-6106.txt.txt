 diff
 -
 -
 git
 a
 /
 net
 /
 bluetooth
 /
 cmtp
 /
 capi.c
 b
 /
 net
 /
 bluetooth
 /
 cmtp
 /
 capi.cindex
be04
e9f..ab166
 b4
100644
 -
 -
 -
 a
 /
 net
 /
 bluetooth
 /
 cmtp
 /
 capi.c
 +
 +
 +
 b
 /
 net
 /
 bluetooth
 /
 cmtp
 /
 capi.c@@
 -
196
 ,
6
 +
196
 ,
9
 static
 void
 cmtp_recv_interopmsg
 (
 struct
 (
 CAPIMSG_SUBCOMMAND
 (
 skb
 -
 >
 ata
 )
 )
 {
 CAPI_CONF:
 +
 (
 skb
 -
 >
 en
 <
 CAPI_MSG_BASELEN
 +
10
 )
 +
 ;
 +
=
CAPIMSG_U16
 (
 skb
 -
 >
 ata
 ,
 CAPI_MSG_BASELEN
 +
5
 )
 ;
=
CAPIMSG_U16
 (
 skb
 -
 >
 ata
 ,
 CAPI_MSG_BASELEN
 +
8
 )
 ;
 -
226
 ,
6
 +
229
 ,
9
 static
 void
 cmtp_recv_interopmsg
 (
 struct
 ;
 CAPI_FUNCTION_GET_PROFILE:
 +
 (
 skb
 -
 >
 en
 <
 CAPI_MSG_BASELEN
 +
11
 +
 sizeof
 (
 capi_profile
 )
 )
 +
 ;
 +
=
CAPIMSG_U16
 (
 skb
 -
 >
 ata
 ,
 CAPI_MSG_BASELEN
 +
11
 )
 ;
=
 CAPIMSG_MSGID
 (
 skb
 -
 >
 ata
 )
 ;
 -
246
 ,
17
 +
252
 ,
26
 static
 void
 cmtp_recv_interopmsg
 (
 struct
 ;
 CAPI_FUNCTION_GET_MANUFACTURER:
 +
 (
 skb
 -
 >
 en
 <
 CAPI_MSG_BASELEN
 +
15
 )
 +
 ;
 +
=
CAPIMSG_U32
 (
 skb
 -
 >
 ata
 ,
 CAPI_MSG_BASELEN
 +
10
 )
 ;
 (
 !
 info
 &
 &
 ctrl
 )
 {
 +
 len
=
 min_t
 (
 uint
 ,
 CAPI_MANUFACTURER_LEN
 ,
 +
 -
 >
 ata[CAPI_MSG_BASELEN
 +
14
 )
 ;
 +
 +
 (
 ctrl
 -
 >
 anu
 ,
0
 ,
 CAPI_MANUFACTURER_LEN
 )
 ;
 (
 ctrl
 -
 >
 anu
 ,
 -
 -
 >
 ata
 +
 CAPI_MSG_BASELEN
 +
15
 ,
 -
 -
 >
 ata[CAPI_MSG_BASELEN
 +
14
 )
 ;
 +
 -
 >
 ata
 +
 CAPI_MSG_BASELEN
 +
15
 ,
 len
 )
 ;
 }
 ;
 CAPI_FUNCTION_GET_VERSION:
 +
 (
 skb
 -
 >
 en
 <
 CAPI_MSG_BASELEN
 +
32
 )
 +
 ;
 +
=
CAPIMSG_U32
 (
 skb
 -
 >
 ata
 ,
 CAPI_MSG_BASELEN
 +
12
 )
 ;
 (
 !
 info
 &
 &
 ctrl
 )
 {
 -
269
 ,
13
 +
284
 ,
18
 static
 void
 cmtp_recv_interopmsg
 (
 struct
 ;
 CAPI_FUNCTION_GET_SERIAL_NUMBER:
 +
 (
 skb
 -
 >
 en
 <
 CAPI_MSG_BASELEN
 +
17
 )
 +
 ;
 +
=
CAPIMSG_U32
 (
 skb
 -
 >
 ata
 ,
 CAPI_MSG_BASELEN
 +
12
 )
 ;
 (
 !
 info
 &
 &
 ctrl
 )
 {
 +
 len
=
 min_t
 (
 uint
 ,
 CAPI_SERIAL_LEN
 ,
 +
 -
 >
 ata[CAPI_MSG_BASELEN
 +
16
 )
 ;
 +
 (
 ctrl
 -
 >
 erial
 ,
0
 ,
 CAPI_SERIAL_LEN
 )
 ;
 (
 ctrl
 -
 >
 erial
 ,
 -
 -
 >
 ata
 +
 CAPI_MSG_BASELEN
 +
17
 ,
 -
 -
 >
 ata[CAPI_MSG_BASELEN
 +
16
 )
 ;
 +
 -
 >
 ata
 +
 CAPI_MSG_BASELEN
 +
17
 ,
 len
 )
 ;
 }
 ;
 -
284
 ,
14
 +
304
 ,
18
 static
 void
 cmtp_recv_interopmsg
 (
 struct
 ;
 CAPI_IND:
 +
 (
 skb
 -
 >
 en
 <
 CAPI_MSG_BASELEN
 +
6
 )
 +
 ;
 +
=
CAPIMSG_U16
 (
 skb
 -
 >
 ata
 ,
 CAPI_MSG_BASELEN
 +
3
 )
 ;
 (
 func
 ==
 CAPI_FUNCTION_LOOPBACK
 )
 {
 +
 len
=
 min_t
 (
 uint
 ,
 skb
 -
 >
 en
 -
 CAPI_MSG_BASELEN
 -
6
 ,
 +
 -
 >
 ata[CAPI_MSG_BASELEN
 +
5
 )
 ;
=
 CAPIMSG_APPID
 (
 skb
 -
 >
 ata
 )
 ;
=
 CAPIMSG_MSGID
 (
 skb
 -
 >
 ata
 )
 ;
 (
 session
 ,
 CAPI_RESP
 ,
 appl
 ,
 msgnum
 ,
 func
 ,
 -
 -
 >
 ata
 +
 CAPI_MSG_BASELEN
 +
6
 ,
 -
 -
 >
 ata[CAPI_MSG_BASELEN
 +
5
 )
 ;
 +
 -
 >
 ata
 +
 CAPI_MSG_BASELEN
 +
6
 ,
 len
 )
 ;
 }
 ;
 -
309
 ,
6
 +
333
 ,
9
 void
 cmtp_recv_capimsg
 (
 struct
 cmtp_sessi
 (
"session %p skb %p len %d"
 ,
 session
 ,
 skb
 ,
 skb
 -
 >
 en
 )
 ;
 +
 (
 skb
 -
 >
 en
 <
 CAPI_MSG_BASELEN
 )
 +
 ;
 +
 (
 CAPIMSG_COMMAND
 (
 skb
 -
 >
 ata
 )
 ==
 CAPI_INTEROPERABILITY
 )
 {
 (
 session
 ,
 skb
 )
 ;
 ;
